#3-say_my_name.txt

===========================
How to use 3-say_my_name.py
===========================

This module defines a function ``def say_my_name(first_name, last_name="")``

Usage
=====
Prints ``My name is <first name> <last name>``

	>>> say_my_name = __import__('3-say_my_name').say_my_name

	>>> say_my_name("Julia", "Mwakazi")
	My name is Julia Mwakazi

If the second name is not provided, an empty string is used in its place.

::

	>>> say_my_name("Jean")
	My name is Jean

Invalid Names
=============

If an invalid name(a non-string)value is entered a TypeError is raised

::

	>>> say_my_name("Barbie", 2)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name(4, "Lee")
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> sys_my_name(["Lucy", "Luke", "Lyd"], "Pierre")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("Mamadou", ["Luc", "Valentine", "Mac"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

If both values passed are non-strings, a TypeError is raised to the first value

::

	>>> say_my_name(["Biladeau", 37, "Imani"], 4)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(4, ["Biladeau", 37, "Imani"])
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

At least one argument must be provided

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
