Divide a matrix
================
This file contains a function that divides all elements of a matrix

Usage
=====
"def matrix_divided(matrix, div)" divides all elements of a matrix using div
::

	>>>matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>>matrix = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]
	>>>print(matrix_divided(matrix, 2))
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
After division, values should be rounded off to two decimal places
::
	>>>matrix = [
        ... [2, 4, 6],
        ... [8, 10, 12]
        ... ]
        >>>print(matrix_divided(matrix, 2))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
Floating point numbers can also be applied
::
	>>>matrix = [
        ... [2.4, 4.8, 6.4],
        ... [8.4, 10.2, 12.6]
        ... ]
        >>>print(matrix_divided(matrix, 2)) 
        [[1.2, 2.4, 3.2], [4.2, 5.1, 6.3]]
Integers can be combined with floating point values
::
	>>>matrix = [
        ... [2.4, 4, 6.4],
        ... [8.4, -10.2, -12]
        ... ]
        >>>print(matrix_divided(matrix, 2))
        [[1.2, 2.0, 3.2], [4.2, -5.1, -6.0]]

Invalid Syntax
==============
matrix must be a list of lists of integers or floats.
If not a TypeError is raised.
::
	>>>matrix = None
	>>>print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a list of lists of integers or floats
An empty matrix will similarly raise a TypeError
::
	>>>matrix = []
        >>>print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
        TypeError: matrix must be a list of lists of integers or floats
But a matrix, list with an empty list is acceptable
::
	>>>matrix = [[]]
        >>>print(matrix_divided(matrix, 2))
	[[]]
If the matrix is made up of only one list, a TypeError is also raised
::
	>>>matrix = [2, 4, 6]
        >>>print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
        TypeError: matrix must be a list of lists of integers or floats
If the matrix contains a non-integer/non-float value, a TypeError is raised
::
	>>>matrix = [
        ... [2, 4, 6],
        ... [8, "m", 12]
        ... ]
        >>>print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
        TypeError: matrix must be a list of lists of integers or floats
If the rows of the matrix differ in size, a different TypeError is raised
::
	>>>matrix = [
        ... [2, 4, 6],
        ... [8, 10, 8, 12]
        ... ]
        >>>print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size
===================
If div is a non-integer a TypeError is thrown
::
	>>>matrix = [
        ... [2, 4, 6],
        ... [8, 10, 12]
        ... ]
        >>>print(matrix_divided(matrix, None))
        Traceback (most recent call last):
        TypeError: div must be a number
If div is 0 a ZeroDivisionError is raised
::
	>>>matrix = [
        ... [2, 4, 6],
        ... [8, 10, 12]
        ... ]
        >>>print(matrix_divided(matrix, 0))
        Traceback (most recent call last):
        TypeError: division by zero
