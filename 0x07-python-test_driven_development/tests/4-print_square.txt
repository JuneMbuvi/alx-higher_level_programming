Print square
The module through the function ‘def print_square(size)’ prints a square with ‘#’

Usage
=====
A square is printed with the ‘#’ character. Size represents the sides of the square.
::

	>>>print_square = __import__(‘4-print_square’).print_square

Valid Size
==========
::
	>>>print_square(2)
	##
	##

::

	>>>print_square(5)
	#####
	#####
	#####
	#####
	#####

If size is 0, nothing is printed
::
	>>>print_square(0)


Invalid Size(s)
===============
If a non-integer is used, a TypeError is raised.
::
	>>>print_square(‘two’)
	Traceback (most recent call last):
	TypeError: size must be an integer

::
	>>>print_square(4.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>>print_square(‘two’)
	Traceback (most recent call last):
	TypeError: size must be an integer

If size < 0 , a ValueError is raised
::
	>>>print_square(-3)
	Traceback (most recent call last):
	ValueError: size must be >= 0

::
	>>>print_square(-3.2)
	Traceback (most recent call last):
	ValueError: size must be >= 0

At least one argument has to be provided
::
	>>>print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: ‘size’
